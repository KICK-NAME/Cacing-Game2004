<!doctype html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=0.1">
    <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
    <title>Game Cacing</title>
    <style>
        html,
        body {
            height: 100%;
            margin: 0;
        }

        body {
            background: black;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        canvas {
            border: 1px solid white;
            background-color: gold;
        }

        #p1 {
            color: red;
            position: absolute;
            left: 100px;
            top: 10px;
        }

        #p2 {
            color: red;
            position: absolute;
            left: 100px;
            top: 30px;
        }

        #score {
            color: yellow;
            position: absolute;
            left: 155px;
            top: 10px;
        }

        #high {
            color: yellow;
            position: absolute;
            left: 195px;
            top: 30px;
        }
    </style>
</head>

<body>
    <p id="p1">Sekor:</p>
    <o id="p2">Sekor Tertinggi:</p>
        <p id="score"></p>
        <p id="high"></p>
        <canvas width="800" height="800" id="game"></canvas>
        <script>
            var canvas = document.getElementById('game');
            var context = canvas.getContext('2d');
            var grid = 16;
            var count = 0;
            var score = 0;
            var max = 0;

            var snake = {
                x: 160,
                y: 160,


                dx: grid,
                dy: 0,


                cells: [],


                maxCells: 4
            };
            var apple = {
                x: 320,
                y: 320
            };


            function getRandomInt(min, max) {
                return Math.floor(Math.random() * (max - min)) + min;
            }

            function loop() {
                requestAnimationFrame(loop);

                if (++count < 4) {
                    return;
                }
                count = 0;
                context.clearRect(0, 0, canvas.width, canvas.height);
                snake.x += snake.dx;
                snake.y += snake.dy;

                if (snake.x < 0) {
                    snake.x = canvas.width - grid;
                }
                else if (snake.x >= canvas.width) {
                    snake.x = 0;
                }


                if (snake.y < 0) {
                    snake.y = canvas.height - grid;
                }
                else if (snake.y >= canvas.height) {
                    snake.y = 0;
                }

                snake.cells.unshift({ x: snake.x, y: snake.y });

                if (snake.cells.length > snake.maxCells) {
                    snake.cells.pop();
                }

                context.fillStyle = 'red';
                context.fillRect(apple.x, apple.y, grid - 1, grid - 1);

                context.fillStyle = 'green';
                snake.cells.forEach(function(cell, index) {

                        context.fillRect(cell.x, cell.y, grid - 1, grid - 1);

                        if (cell.x === apple.x && cell.y === apple.y) {
                            snake.maxCells++;
                            score += 10;

                            document.getElementById('score').innerHTML = score;


                            apple.x = getRandomInt(0, 25) * grid;
                            apple.y = getRandomInt(0, 25) * grid;
                        }

                        for (var i = index + 1; i < snake.cells.length; i++)
                        {

                            if (cell.x === snake.cells[i].x && cell.y === snake.cells[i].y)
                            {

                                if (score > max)
                                {
                                    max = score;
                                }
                                snake.x = 160;
                                snake.y = 160;
                                snake.cells = ular;
                                snake.maxCells = 4;
                                snake.dx = grid;
                                snake.dy = 0;
                                score = 0;
                                apple.x = getRandomInt(0, 25) * grid;
                                apple.y = getRandomInt(0, 25) * grid;
                                document.getElementById('high').innerHTML = max;
                            }
                        }
                    }

                );

            }
            var allowedTime = 200;
            var startX = 0;
            var startY = 0;

            document.addEventListener('touchstart', function(e) {
                var touch = e.changedTouches[0]
                startX = touch.pageX
                startY = touch.pageY
                startTime = new Date().getTime()
                e.preventDefault()
            }, false)

            document.addEventListener('touchmove', function(e) {
                e.preventDefault()
            }, false)

            document.addEventListener('touchend', function(e) {
                var touch = e.changedTouches[0]
                distX = touch.pageX - startX
                distY = touch.pageY - startY

                if (Math.abs(distX) > Math.abs(distY)) {
                    if (distX > 0 && snake.dx === 0) {
                        snake.dx = grid;
                        snake.dy = 0;
                    }
                    else if (distX < 0 && snake.dx === 0) {
                        snake.dx = -grid;
                        snake.dy = 0;
                    }
                } else {
                    if (distY > 0 && snake.dy === 0) {
                        snake.dy = grid;
                        snake.dx = 0;
                    }
                    else if (distY < 0 && snake.dy === 0) {
                        snake.dy = -grid;
                        snake.dx = 0;
                    }
                }
                e.preventDefault();

            }, false)

            document.addEventListener('keydown', function(e) {
                // prevent snake from backtracking on itself
                if (e.which === 37 && snake.dx === 0) {
                    snake.dx = -grid;
                    snake.dy = 0;
                }
                else if (e.which === 38 && snake.dy === 0) {
                    snake.dy = -grid;
                    snake.dx = 0;
                }
                else if (e.which === 39 && snake.dx === 0) {
                    snake.dx = grid;
                    snake.dy = 0;
                }
                else if (e.which === 40 && snake.dy === 0) {
                    snake.dy = grid;
                    snake.dx = 0;
                }
            });

            requestAnimationFrame(loop);
        </script>
</body>

</html>